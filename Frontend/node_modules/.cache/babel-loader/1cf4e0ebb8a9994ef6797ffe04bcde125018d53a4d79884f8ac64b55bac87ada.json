{"ast":null,"code":"/*\n * React FitText\n * https://github.com/gianu/react-fittext\n *\n * A port of the jQuery plugin: http://github.com/davatron5000/FitText.js\n *\n * Released under the MIT license\n * http://gianu.mit-license.org\n */\n'use strict';\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar ReactPropTypes = require('prop-types');\nvar createClass = require('create-react-class');\nmodule.exports = createClass({\n  displayName: 'ReactFitText',\n  propTypes: {\n    children: ReactPropTypes.element.isRequired,\n    compressor: ReactPropTypes.number,\n    minFontSize: ReactPropTypes.number,\n    maxFontSize: ReactPropTypes.number\n  },\n  getDefaultProps: function () {\n    return {\n      compressor: 1.0,\n      minFontSize: Number.NEGATIVE_INFINITY,\n      maxFontSize: Number.POSITIVE_INFINITY\n    };\n  },\n  componentDidMount: function () {\n    window.addEventListener(\"resize\", this._onBodyResize);\n    this._onBodyResize();\n  },\n  componentWillUnmount: function () {\n    window.removeEventListener(\"resize\", this._onBodyResize);\n  },\n  componentDidUpdate: function () {\n    this._onBodyResize();\n  },\n  _onBodyResize: function () {\n    var element = ReactDOM.findDOMNode(this);\n    var width = element.offsetWidth;\n    element.style.fontSize = Math.max(Math.min(width / (this.props.compressor * 10), parseFloat(this.props.maxFontSize)), parseFloat(this.props.minFontSize)) + 'px';\n  },\n  _renderChildren: function () {\n    var _this = this;\n    return React.Children.map(this.props.children, function (child) {\n      return React.cloneElement(child, {\n        ref: function ref(c) {\n          return _this._childRef = c;\n        }\n      });\n    });\n  },\n  render: function () {\n    return this._renderChildren()[0];\n  }\n});","map":{"version":3,"names":["React","require","ReactDOM","ReactPropTypes","createClass","module","exports","displayName","propTypes","children","element","isRequired","compressor","number","minFontSize","maxFontSize","getDefaultProps","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","componentDidMount","window","addEventListener","_onBodyResize","componentWillUnmount","removeEventListener","componentDidUpdate","findDOMNode","width","offsetWidth","style","fontSize","Math","max","min","props","parseFloat","_renderChildren","_this","Children","map","child","cloneElement","ref","c","_childRef","render"],"sources":["d:/project/_CodeFiles/wuthering/node_modules/react-fittext/lib/ReactFitText.js"],"sourcesContent":["/*\n * React FitText\n * https://github.com/gianu/react-fittext\n *\n * A port of the jQuery plugin: http://github.com/davatron5000/FitText.js\n *\n * Released under the MIT license\n * http://gianu.mit-license.org\n */\n'use strict';\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar ReactPropTypes = require('prop-types');\nvar createClass = require('create-react-class');\n\nmodule.exports = createClass({\n  displayName: 'ReactFitText',\n\n  propTypes: {\n    children: ReactPropTypes.element.isRequired,\n    compressor: ReactPropTypes.number,\n    minFontSize: ReactPropTypes.number,\n    maxFontSize: ReactPropTypes.number\n  },\n\n  getDefaultProps: function() {\n    return {\n      compressor: 1.0,\n      minFontSize: Number.NEGATIVE_INFINITY,\n      maxFontSize: Number.POSITIVE_INFINITY\n    };\n  },\n\n  componentDidMount: function() {\n    window.addEventListener(\"resize\", this._onBodyResize);\n    this._onBodyResize();\n  },\n\n  componentWillUnmount: function() {\n    window.removeEventListener(\"resize\", this._onBodyResize);\n  },\n\n  componentDidUpdate: function() {\n    this._onBodyResize();\n  },\n\n  _onBodyResize: function() {\n    var element = ReactDOM.findDOMNode(this);\n    var width = element.offsetWidth;\n    element.style.fontSize = Math.max(\n                      Math.min((width / (this.props.compressor*10)),\n                                parseFloat(this.props.maxFontSize)),\n                      parseFloat(this.props.minFontSize)) + 'px';\n  },\n  _renderChildren: function(){\n    var _this = this;\n\n    return React.Children.map(this.props.children, function (child) {\n      return React.cloneElement(child, { ref: function ref(c) {\n        return _this._childRef = c;\n      } });\n    });\n  },\n  render: function() {\n    return this._renderChildren()[0];\n  }\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC5B,IAAIC,QAAQ,GAAGD,OAAO,CAAC,WAAW,CAAC;AACnC,IAAIE,cAAc,GAAGF,OAAO,CAAC,YAAY,CAAC;AAC1C,IAAIG,WAAW,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAE/CI,MAAM,CAACC,OAAO,GAAGF,WAAW,CAAC;EAC3BG,WAAW,EAAE,cAAc;EAE3BC,SAAS,EAAE;IACTC,QAAQ,EAAEN,cAAc,CAACO,OAAO,CAACC,UAAU;IAC3CC,UAAU,EAAET,cAAc,CAACU,MAAM;IACjCC,WAAW,EAAEX,cAAc,CAACU,MAAM;IAClCE,WAAW,EAAEZ,cAAc,CAACU;EAC9B,CAAC;EAEDG,eAAe,EAAE,SAAAA,CAAA,EAAW;IAC1B,OAAO;MACLJ,UAAU,EAAE,GAAG;MACfE,WAAW,EAAEG,MAAM,CAACC,iBAAiB;MACrCH,WAAW,EAAEE,MAAM,CAACE;IACtB,CAAC;EACH,CAAC;EAEDC,iBAAiB,EAAE,SAAAA,CAAA,EAAW;IAC5BC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,aAAa,CAAC;IACrD,IAAI,CAACA,aAAa,CAAC,CAAC;EACtB,CAAC;EAEDC,oBAAoB,EAAE,SAAAA,CAAA,EAAW;IAC/BH,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACF,aAAa,CAAC;EAC1D,CAAC;EAEDG,kBAAkB,EAAE,SAAAA,CAAA,EAAW;IAC7B,IAAI,CAACH,aAAa,CAAC,CAAC;EACtB,CAAC;EAEDA,aAAa,EAAE,SAAAA,CAAA,EAAW;IACxB,IAAIb,OAAO,GAAGR,QAAQ,CAACyB,WAAW,CAAC,IAAI,CAAC;IACxC,IAAIC,KAAK,GAAGlB,OAAO,CAACmB,WAAW;IAC/BnB,OAAO,CAACoB,KAAK,CAACC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CACfD,IAAI,CAACE,GAAG,CAAEN,KAAK,IAAI,IAAI,CAACO,KAAK,CAACvB,UAAU,GAAC,EAAE,CAAC,EAClCwB,UAAU,CAAC,IAAI,CAACD,KAAK,CAACpB,WAAW,CAAC,CAAC,EAC7CqB,UAAU,CAAC,IAAI,CAACD,KAAK,CAACrB,WAAW,CAAC,CAAC,GAAG,IAAI;EAC9D,CAAC;EACDuB,eAAe,EAAE,SAAAA,CAAA,EAAU;IACzB,IAAIC,KAAK,GAAG,IAAI;IAEhB,OAAOtC,KAAK,CAACuC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAACL,KAAK,CAAC1B,QAAQ,EAAE,UAAUgC,KAAK,EAAE;MAC9D,OAAOzC,KAAK,CAAC0C,YAAY,CAACD,KAAK,EAAE;QAAEE,GAAG,EAAE,SAASA,GAAGA,CAACC,CAAC,EAAE;UACtD,OAAON,KAAK,CAACO,SAAS,GAAGD,CAAC;QAC5B;MAAE,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC;EACDE,MAAM,EAAE,SAAAA,CAAA,EAAW;IACjB,OAAO,IAAI,CAACT,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;EAClC;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}