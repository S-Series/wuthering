{"ast":null,"code":"var _jsxFileName = \"d:\\\\project\\\\_CodeFiles\\\\wuthering\\\\Frontend\\\\src\\\\components\\\\OcrSlot.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from \"react\";\nimport DropSlot from \"./DropSlot\";\nimport \"./OcrSlot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OCRSlot(isMain) {\n  _s();\n  const boxRef = useRef(null);\n  const [imageURL, setImageURL] = useState(null);\n  useEffect(() => {\n    const handlePaste = e => {\n      const items = e.clipboardData.items;\n      for (const item of items) {\n        if (item.type.indexOf(\"image\") !== -1) {\n          const file = item.getAsFile();\n          const url = URL.createObjectURL(file);\n          setImageURL(url);\n          e.preventDefault(); // 브라우저 기본 삽입 방지\n        }\n      }\n    };\n    const box = boxRef.current;\n    box.addEventListener(\"paste\", handlePaste);\n    return () => box.removeEventListener(\"paste\", handlePaste);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ocr-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ocr-input-slot\",\n      tabIndex: 0,\n      ref: boxRef,\n      contentEditable: false,\n      children: imageURL ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageURL,\n        alt: \"\\uBD99\\uC5EC\\uB123\\uC740 \\uC774\\uBBF8\\uC9C0\",\n        className: \"ocr-preview-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ocr-guide-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropSlot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(OCRSlot, \"ZR1iCR03iOEV+qeOpQgM1vA9DZk=\");\n_c = OCRSlot;\nexport default OCRSlot;\nvar _c;\n$RefreshReg$(_c, \"OCRSlot\");","map":{"version":3,"names":["useRef","useState","useEffect","DropSlot","jsxDEV","_jsxDEV","OCRSlot","isMain","_s","boxRef","imageURL","setImageURL","handlePaste","e","items","clipboardData","item","type","indexOf","file","getAsFile","url","URL","createObjectURL","preventDefault","box","current","addEventListener","removeEventListener","className","children","tabIndex","ref","contentEditable","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["d:/project/_CodeFiles/wuthering/Frontend/src/components/OcrSlot.js"],"sourcesContent":["import { useRef, useState, useEffect } from \"react\";\r\nimport DropSlot from \"./DropSlot\";\r\nimport \"./OcrSlot.css\";\r\n\r\nfunction OCRSlot(isMain) {\r\n  const boxRef = useRef(null);\r\n  const [imageURL, setImageURL] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handlePaste = (e) => {\r\n      const items = e.clipboardData.items;\r\n      for (const item of items) {\r\n        if (item.type.indexOf(\"image\") !== -1) {\r\n          const file = item.getAsFile();\r\n          const url = URL.createObjectURL(file);\r\n          setImageURL(url);\r\n          e.preventDefault(); // 브라우저 기본 삽입 방지\r\n        }\r\n      }\r\n    };\r\n\r\n    const box = boxRef.current;\r\n    box.addEventListener(\"paste\", handlePaste);\r\n\r\n    return () => box.removeEventListener(\"paste\", handlePaste);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"ocr-body\">\r\n      <div\r\n        className=\"ocr-input-slot\"\r\n        tabIndex={0}\r\n        ref={boxRef}\r\n        contentEditable={false}\r\n      >\r\n        {imageURL ? (\r\n          <img src={imageURL} alt=\"붙여넣은 이미지\" className=\"ocr-preview-img\" />\r\n        ) : (\r\n          <p className=\"ocr-guide-text\"></p>\r\n        )}\r\n      </div>\r\n      <DropSlot />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OCRSlot;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAACC,MAAM,EAAE;EAAAC,EAAA;EACvB,MAAMC,MAAM,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAIC,CAAC,IAAK;MACzB,MAAMC,KAAK,GAAGD,CAAC,CAACE,aAAa,CAACD,KAAK;MACnC,KAAK,MAAME,IAAI,IAAIF,KAAK,EAAE;QACxB,IAAIE,IAAI,CAACC,IAAI,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;UACrC,MAAMC,IAAI,GAAGH,IAAI,CAACI,SAAS,CAAC,CAAC;UAC7B,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;UACrCR,WAAW,CAACU,GAAG,CAAC;UAChBR,CAAC,CAACW,cAAc,CAAC,CAAC,CAAC,CAAC;QACtB;MACF;IACF,CAAC;IAED,MAAMC,GAAG,GAAGhB,MAAM,CAACiB,OAAO;IAC1BD,GAAG,CAACE,gBAAgB,CAAC,OAAO,EAAEf,WAAW,CAAC;IAE1C,OAAO,MAAMa,GAAG,CAACG,mBAAmB,CAAC,OAAO,EAAEhB,WAAW,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKwB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBzB,OAAA;MACEwB,SAAS,EAAC,gBAAgB;MAC1BE,QAAQ,EAAE,CAAE;MACZC,GAAG,EAAEvB,MAAO;MACZwB,eAAe,EAAE,KAAM;MAAAH,QAAA,EAEtBpB,QAAQ,gBACPL,OAAA;QAAK6B,GAAG,EAAExB,QAAS;QAACyB,GAAG,EAAC,6CAAU;QAACN,SAAS,EAAC;MAAiB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEjElC,OAAA;QAAGwB,SAAS,EAAC;MAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAClC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNlC,OAAA,CAACF,QAAQ;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAAC/B,EAAA,CAxCQF,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AA0ChB,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}