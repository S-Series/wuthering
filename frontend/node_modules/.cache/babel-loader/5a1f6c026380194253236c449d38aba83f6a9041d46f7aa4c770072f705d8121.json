{"ast":null,"code":"import stringSimilarity from \"string-similarity\";\nimport { FixedStats } from \"../Datas/Stats\";\nexport function OcrRetouch({\n  text,\n  lang\n}) {\n  console.log(\"1\");\n  if (!text || !Array.isArray(text)) {\n    return {\n      retType: [],\n      retValue: []\n    };\n  }\n  ;\n  if (!lang) lang = \"en\";\n  const statList = FixedStats.map(stat => stat[lang]).filter(Boolean);\n  for (let i = 0; i < text.length; i++) {\n    const {\n      bestMatch\n    } = stringSimilarity.findBestMatch(text[i], statList);\n    if (bestMatch.rating > 0.8) {\n      startIndex = i;\n      break;\n    }\n  }\n  console.log(startIndex);\n  if (startIndex === -1 || startIndex + 13 >= text.length) {\n    return {\n      retType: [],\n      retValue: []\n    };\n  }\n  const retType = [];\n  const retValue = [];\n  for (let i = 0; i < 14; i += 2) {\n    const key = text[startIndex + i];\n    const val = text[startIndex + i + 1];\n    const {\n      bestMatch\n    } = stringSimilarity.findBestMatch(key, statList);\n    const matched = bestMatch.rating > 0.8 ? bestMatch.target : null;\n    if (matched) {\n      retType.push(matched);\n      retValue.push(val);\n    }\n  }\n  console.log({\n    retType,\n    retValue\n  });\n  return {\n    retType,\n    retValue\n  };\n}\n_c = OcrRetouch;\nvar _c;\n$RefreshReg$(_c, \"OcrRetouch\");","map":{"version":3,"names":["stringSimilarity","FixedStats","OcrRetouch","text","lang","console","log","Array","isArray","retType","retValue","statList","map","stat","filter","Boolean","i","length","bestMatch","findBestMatch","rating","startIndex","key","val","matched","target","push","_c","$RefreshReg$"],"sources":["d:/project/_CodeFiles/wuthering/frontend/src/func/OcrRetouch.js"],"sourcesContent":["import stringSimilarity from \"string-similarity\";\r\nimport { FixedStats } from \"../Datas/Stats\";\r\n\r\nexport function OcrRetouch({ text, lang }) {\r\n    console.log(\"1\"); \r\n  if (!text || !Array.isArray(text)){return { retType: [], retValue: [] }};\r\n  if (!lang) lang = \"en\";\r\n\r\n  const statList = FixedStats.map(stat => stat[lang]).filter(Boolean);\r\n\r\n  for (let i = 0; i < text.length; i++) {\r\n    const { bestMatch } = stringSimilarity.findBestMatch(text[i], statList);\r\n    if (bestMatch.rating > 0.8) {\r\n      startIndex = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  console.log(startIndex);\r\n\r\n  if (startIndex === -1 || startIndex + 13 >= text.length) {\r\n    return { retType: [], retValue: [] };\r\n  }\r\n\r\n  const retType = [];\r\n  const retValue = [];\r\n\r\n  for (let i = 0; i < 14; i += 2) {\r\n    const key = text[startIndex + i];\r\n    const val = text[startIndex + i + 1];\r\n\r\n    const { bestMatch } = stringSimilarity.findBestMatch(key, statList);\r\n    const matched = bestMatch.rating > 0.8 ? bestMatch.target : null;\r\n\r\n    if (matched) {\r\n      retType.push(matched);\r\n      retValue.push(val);\r\n    }\r\n  }\r\n\r\n  console.log({ retType, retValue })\r\n  return { retType, retValue };\r\n}\r\n"],"mappings":"AAAA,OAAOA,gBAAgB,MAAM,mBAAmB;AAChD,SAASC,UAAU,QAAQ,gBAAgB;AAE3C,OAAO,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC;AAAK,CAAC,EAAE;EACvCC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAClB,IAAI,CAACH,IAAI,IAAI,CAACI,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,EAAC;IAAC,OAAO;MAAEM,OAAO,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC;EAAA;EAAC;EACxE,IAAI,CAACN,IAAI,EAAEA,IAAI,GAAG,IAAI;EAEtB,MAAMO,QAAQ,GAAGV,UAAU,CAACW,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACT,IAAI,CAAC,CAAC,CAACU,MAAM,CAACC,OAAO,CAAC;EAEnE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,IAAI,CAACc,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,MAAM;MAAEE;IAAU,CAAC,GAAGlB,gBAAgB,CAACmB,aAAa,CAAChB,IAAI,CAACa,CAAC,CAAC,EAAEL,QAAQ,CAAC;IACvE,IAAIO,SAAS,CAACE,MAAM,GAAG,GAAG,EAAE;MAC1BC,UAAU,GAAGL,CAAC;MACd;IACF;EACF;EAEAX,OAAO,CAACC,GAAG,CAACe,UAAU,CAAC;EAEvB,IAAIA,UAAU,KAAK,CAAC,CAAC,IAAIA,UAAU,GAAG,EAAE,IAAIlB,IAAI,CAACc,MAAM,EAAE;IACvD,OAAO;MAAER,OAAO,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC;EACtC;EAEA,MAAMD,OAAO,GAAG,EAAE;EAClB,MAAMC,QAAQ,GAAG,EAAE;EAEnB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAE;IAC9B,MAAMM,GAAG,GAAGnB,IAAI,CAACkB,UAAU,GAAGL,CAAC,CAAC;IAChC,MAAMO,GAAG,GAAGpB,IAAI,CAACkB,UAAU,GAAGL,CAAC,GAAG,CAAC,CAAC;IAEpC,MAAM;MAAEE;IAAU,CAAC,GAAGlB,gBAAgB,CAACmB,aAAa,CAACG,GAAG,EAAEX,QAAQ,CAAC;IACnE,MAAMa,OAAO,GAAGN,SAAS,CAACE,MAAM,GAAG,GAAG,GAAGF,SAAS,CAACO,MAAM,GAAG,IAAI;IAEhE,IAAID,OAAO,EAAE;MACXf,OAAO,CAACiB,IAAI,CAACF,OAAO,CAAC;MACrBd,QAAQ,CAACgB,IAAI,CAACH,GAAG,CAAC;IACpB;EACF;EAEAlB,OAAO,CAACC,GAAG,CAAC;IAAEG,OAAO;IAAEC;EAAS,CAAC,CAAC;EAClC,OAAO;IAAED,OAAO;IAAEC;EAAS,CAAC;AAC9B;AAACiB,EAAA,GAvCezB,UAAU;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}