{"ast":null,"code":"import stringSimilarity from \"string-similarity\";\nimport { FixedStats } from \"../Datas/Stats\";\nexport function OcrRetouch({\n  text,\n  lang\n}) {\n  if (!text || !Array.isArray(text)) return [];\n  if (!lang) lang = \"en\";\n  var retType;\n  var retValue;\n  const statList = FixedStats.map(s => s === null || s === void 0 ? void 0 : s[lang]);\n  const replaced = text.map(item => {\n    const {\n      bestMatch\n    } = stringSimilarity.findBestMatch(item, statList);\n    const matched = bestMatch.rating > 0.9 ? bestMatch.target : item;\n    return matched;\n  });\n  for (var i = 0; i < replaced.length; i++) {\n    console.log(replaced[i]);\n    try {\n      var temp = statList.find(t => t.replaced[i]);\n      if (FixedStats != null) {}\n    } catch {\n      continue;\n    }\n  }\n  return datas;\n}\n_c = OcrRetouch;\nvar _c;\n$RefreshReg$(_c, \"OcrRetouch\");","map":{"version":3,"names":["stringSimilarity","FixedStats","OcrRetouch","text","lang","Array","isArray","retType","retValue","statList","map","s","replaced","item","bestMatch","findBestMatch","matched","rating","target","i","length","console","log","temp","find","t","datas","_c","$RefreshReg$"],"sources":["d:/project/_CodeFiles/wuthering/frontend/src/func/OcrRetouch.js"],"sourcesContent":["import stringSimilarity from \"string-similarity\";\r\nimport { FixedStats as FixedStats } from \"../Datas/Stats\";\r\n\r\nexport function OcrRetouch({ text, lang }) {\r\n  if (!text || !Array.isArray(text)) return [];\r\n  if (!lang) lang = \"en\";\r\n\r\n  var retType;\r\n  var retValue;\r\n\r\n  const statList = FixedStats.map((s) => s?.[lang]);\r\n  const replaced = text.map((item) => {\r\n    const { bestMatch } = stringSimilarity.findBestMatch(item, statList);\r\n    const matched = bestMatch.rating > 0.9 ? bestMatch.target : item;\r\n    return matched;\r\n  });\r\n\r\n  for (var i = 0; i < replaced.length; i++) {\r\n    console.log(replaced[i]);\r\n    try {\r\n      var temp = statList.find((t) => t.replaced[i]);\r\n      if (FixedStats != null) {\r\n      }\r\n    } catch {\r\n      continue;\r\n    }\r\n  }\r\n\r\n  return datas;\r\n}\r\n"],"mappings":"AAAA,OAAOA,gBAAgB,MAAM,mBAAmB;AAChD,SAASC,UAAwB,QAAQ,gBAAgB;AAEzD,OAAO,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC;AAAK,CAAC,EAAE;EACzC,IAAI,CAACD,IAAI,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE,OAAO,EAAE;EAC5C,IAAI,CAACC,IAAI,EAAEA,IAAI,GAAG,IAAI;EAEtB,IAAIG,OAAO;EACX,IAAIC,QAAQ;EAEZ,MAAMC,QAAQ,GAAGR,UAAU,CAACS,GAAG,CAAEC,CAAC,IAAKA,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAGP,IAAI,CAAC,CAAC;EACjD,MAAMQ,QAAQ,GAAGT,IAAI,CAACO,GAAG,CAAEG,IAAI,IAAK;IAClC,MAAM;MAAEC;IAAU,CAAC,GAAGd,gBAAgB,CAACe,aAAa,CAACF,IAAI,EAAEJ,QAAQ,CAAC;IACpE,MAAMO,OAAO,GAAGF,SAAS,CAACG,MAAM,GAAG,GAAG,GAAGH,SAAS,CAACI,MAAM,GAAGL,IAAI;IAChE,OAAOG,OAAO;EAChB,CAAC,CAAC;EAEF,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,QAAQ,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;IACxCE,OAAO,CAACC,GAAG,CAACV,QAAQ,CAACO,CAAC,CAAC,CAAC;IACxB,IAAI;MACF,IAAII,IAAI,GAAGd,QAAQ,CAACe,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACb,QAAQ,CAACO,CAAC,CAAC,CAAC;MAC9C,IAAIlB,UAAU,IAAI,IAAI,EAAE,CACxB;IACF,CAAC,CAAC,MAAM;MACN;IACF;EACF;EAEA,OAAOyB,KAAK;AACd;AAACC,EAAA,GA1BezB,UAAU;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}