{"ast":null,"code":"import stringSimilarity from \"string-similarity\";\nimport { FixedStats } from \"../Datas/Stats\";\nexport function OcrRetouch({\n  text,\n  lang\n}) {\n  if (!text || !Array.isArray(text)) return [];\n  if (!lang) lang = \"en\";\n  const statList = FixedStats.map(s => s === null || s === void 0 ? void 0 : s[lang]);\n  const replaced = text.map(item => {\n    const {\n      bestMatch\n    } = stringSimilarity.findBestMatch(item, statList);\n    const matched = bestMatch.rating > 0.9 ? bestMatch.target : item;\n    return matched;\n  });\n  for (var i = 0; i < replaced.length; i++) {\n    console.log(replaced[i]);\n    try {\n      var temp = statList.find(t => t.replaced[i]);\n      if (FixedStats != null) {}\n    } catch {\n      continue;\n    }\n  }\n  return datas;\n}\n_c = OcrRetouch;\nvar _c;\n$RefreshReg$(_c, \"OcrRetouch\");","map":{"version":3,"names":["stringSimilarity","FixedStats","OcrRetouch","text","lang","Array","isArray","statList","map","s","replaced","item","bestMatch","findBestMatch","matched","rating","target","i","length","console","log","temp","find","t","datas","_c","$RefreshReg$"],"sources":["d:/project/_CodeFiles/wuthering/frontend/src/func/OcrRetouch.js"],"sourcesContent":["import stringSimilarity from \"string-similarity\";\r\nimport {FixedStats as FixedStats} from \"../Datas/Stats\";\r\n\r\nexport function OcrRetouch({text, lang}) {\r\n  if (!text || !Array.isArray(text)) return [];\r\n  if (!lang) lang = \"en\";\r\n\r\n  const statList = FixedStats.map((s) => s?.[lang]);\r\n  const replaced = text.map((item) => {\r\n    const { bestMatch } = stringSimilarity.findBestMatch(item, statList);\r\n    const matched = bestMatch.rating > 0.9 ? bestMatch.target : item;\r\n    return matched;\r\n  });\r\n\r\n    for (var i = 0; i < replaced.length; i++){\r\n        console.log(replaced[i]);\r\n        try {\r\n            var temp = statList.find((t) => t.replaced[i])\r\n            if (FixedStats != null){\r\n\r\n            }\r\n        }\r\n        catch{ continue; }\r\n    }\r\n\r\n    return(datas);\r\n}\r\n"],"mappings":"AAAA,OAAOA,gBAAgB,MAAM,mBAAmB;AAChD,SAAQC,UAAwB,QAAO,gBAAgB;AAEvD,OAAO,SAASC,UAAUA,CAAC;EAACC,IAAI;EAAEC;AAAI,CAAC,EAAE;EACvC,IAAI,CAACD,IAAI,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE,OAAO,EAAE;EAC5C,IAAI,CAACC,IAAI,EAAEA,IAAI,GAAG,IAAI;EAEtB,MAAMG,QAAQ,GAAGN,UAAU,CAACO,GAAG,CAAEC,CAAC,IAAKA,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAGL,IAAI,CAAC,CAAC;EACjD,MAAMM,QAAQ,GAAGP,IAAI,CAACK,GAAG,CAAEG,IAAI,IAAK;IAClC,MAAM;MAAEC;IAAU,CAAC,GAAGZ,gBAAgB,CAACa,aAAa,CAACF,IAAI,EAAEJ,QAAQ,CAAC;IACpE,MAAMO,OAAO,GAAGF,SAAS,CAACG,MAAM,GAAG,GAAG,GAAGH,SAAS,CAACI,MAAM,GAAGL,IAAI;IAChE,OAAOG,OAAO;EAChB,CAAC,CAAC;EAEA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,QAAQ,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAC;IACrCE,OAAO,CAACC,GAAG,CAACV,QAAQ,CAACO,CAAC,CAAC,CAAC;IACxB,IAAI;MACA,IAAII,IAAI,GAAGd,QAAQ,CAACe,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACb,QAAQ,CAACO,CAAC,CAAC,CAAC;MAC9C,IAAIhB,UAAU,IAAI,IAAI,EAAC,CAEvB;IACJ,CAAC,CACD,MAAK;MAAE;IAAU;EACrB;EAEA,OAAOuB,KAAK;AAChB;AAACC,EAAA,GAvBevB,UAAU;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}